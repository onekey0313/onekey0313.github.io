<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[blog配置1]]></title>
    <url>%2F2018%2F09%2F07%2Fblog%E9%85%8D%E7%BD%AE1%2F</url>
    <content type="text"><![CDATA[文件迁移添加SSH Keys首先在本地创建 SSH Keys，（直接用Mac的终端，或者Windows的找到git-git bash） 1ssh-keygen -t rsa -C "youremail@163.com" 后面的邮箱即为 github 注册邮箱，也是你登录 Github 的邮箱，之后会要求确认路径和输入密码，一路回车就行。成功的话会在 ~/下生成 .ssh文件夹，进去，打开 id_rsa.pub，复制里面的key即可。如图 然后我们再次测试下公钥有没有添加成功： 1ssh -T git@github.com 如果成功了，就会出现恭喜的英文。之后我们再次部署我们的博客网站： 1hexo d 成功。我的个人博客网站也正常显示. 源文件拷贝将你原来电脑上个人博客目录下必要文件拷到你的新电脑上（比如/users/yourname目录下），注意无需拷全部，只拷如下几个目录： 12345_config.ymlpackage.jsonscaffolds/source/themes/ 安装 hexo在中断里输入下面指令安装 hexo： 1npm install hexo-cli -g 进入/users/yourname目录（你拷贝到新电脑的目录）输入下面指令安装相关模块 123456cd /users/yourname //进入文件夹的指令npm installnpm install hexo-deployer-git --save // 文章部署到 git 的模块（下面为选择安装）npm install hexo-generator-feed --save // 建立 RSS 订阅npm install hexo-generator-sitemap --save // 建立站点地图 部署发布文章1234567hexo clean // 清除缓存 网页正常情况下可以忽略此条命令hexo g // 生成静态网页hexo d // 开始部署也可以简化成 hexo cleanhexo d -g 更换Hexo主题主题选的是NexT，我安装的时候还是16年，现在最新更新的Github网址为https://github.com/theme-next/hexo-theme-next首先将NexT的主题源文件下载到本地，使用Git克隆指令如下： 1git clone https://github.com/theme-next/hexo-theme-next.git 下载后，将压缩包解压缩(文件位于指令运行的当前目录)，复制其中名称为hexo-theme-next的文件夹到Hexo的主题目录下，主题目录的路径为：Hexo博客根目录/themes/ 在Hexo根目录下有一个以_config.yml命名的文件（下称==站点配置文件== ），用Sublime/NotePad++等文本编辑器打开，在其中找到theme属性，将其由landscape改为next。 然后在Hexo根目录执行部署Hexo指令： 12345hexo clean // 清理缓存hexo generate // 生成文件hexo deploy // 部署 便可以在远程的博客上看到修改主题后的样式了。 设置Hexo主题模式看到上图，读者可能会产生疑问，为什么自己的主题样式和笔者的不一样，这是因为在Hexo主题中，有四种不同的模式，通过切换模式，让NexT主题显示不一样的样式。 在NexT根目录下有一个同样名称为_config.yml，为了区分hexo根目录下的_config.yml，将前者称为主题配置文件，在其中找到scheme属性，如下图所示： 123456只需把你所想要的主题前 # 删掉即可。#Schemes#scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini NexT主题默认使用Muse模式，我采用的是Pisces模式，读者可根据自己的喜好，选择其中一种模式。 修正图片显示问题经过上面的配置后，发现上传的博客文章里面的本地图片居然显示不来（没有同步上传）。 于是，找到解决方案： 把主页配置文件中的_config.yml里的post_asset_folder:这个选项设置为`true 在你的hexo目录点击右键选择git bush，执行这样一句话npm install hexo-asset-image --save，这是下载安装一个可以上传本地图片的插件 等待一小段时间后，再运行hexo n &quot;xxxx&quot;来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹 最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后需要在xxxx.md中按照下面这种格式才能引入图片： 1![你想输入的替代文字](XXX/图片名.jpg) 注意： xxxx是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。 现在只需要直接在括号里写上你的图片名称就行，不用加博客文件名，但是在markdown编辑器上看不见图片，所以采用上面这种格式就很好。 5.hexo s，运行本地服务器，打开http://localhost:4000/可实时查看修改情况。 6.hexo d，同步到github。 相关blog： 1 2 3 4 5 错误解决方案localhost:4000 cannot get 第一种可能是没安装插件，输入指令： 1npm install hexo-server --save 安装完成后，输入以下命令以启动服务器，您的网站会在 http://localhost:4000 下启动。在服务器启动期间，Hexo会监视文件变动并自动更新，您无须重启服务器。 1hexo server 如果您想要更改端口，或是在执行时遇到了 EADDRINUSE 错误，可以在执行时使用 -p 选项指定其他端口，如下： 1hexo server -p 5000 第二种可能，估计是npm安装问题，可以重新安装 1npm install 但当时我出现了 1234npm WARN deprecated ejs@1.0.0: Critical security bugs fixed in 2.5.5added 10 packages from 6 contributors and audited 3766 packages in 10.51sfound 2 low severity vulnerabilities run `npm audit fix` to fix them, or `npm audit` for details 按照指示我输入 1npm audit fix 最后一种，直接hexo g部署一下，出现所有文件generated后就可以了]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[图片测试]]></title>
    <url>%2F2018%2F09%2F07%2F%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo优化篇]]></title>
    <url>%2F2018%2F09%2F07%2FHexo%E4%BC%98%E5%8C%96%E7%AF%87%2F</url>
    <content type="text"><![CDATA[Hexo搭建blog优化篇主题配置文件 blog(自己建博客的文件夹)/source/_data/next.yml 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249# Hexo's Version: 3.7.1# NexT's Version: 6.3.0# 是否覆盖NexT主题的默认配置:## false: 合并默认配置,无需包含所有的配置项## true: 覆盖默认配置, 必须包含所有的配置项override: true# 启用缓存文件生成, 在NexT(v6.0.0)中引入cache: enable: true# 重新定义自定义配置文件的路径, 若已经注释, 使用默认的自定义文件路径, 在NexT(v6.0.2)中引入custom_file_path: # Default path: source/css/_custom/custom.styl styles: source/_data/styles.styl # Default path: source/css/_variables/custom.styl variables: source/_data/variables.styl# 自定义站点图标, 默认路径指向themes/next/source/images/, 可自定义为hexo-site/source/images/目录favicon: small: images/favicon.png medium: images/favicon.png apple_touch_icon: images/favicon.png safari_pinned_tab: images/favicon.svg# 是否启用RSS链接图标： false: 不启用rss: /atom.xml# 配置站点页脚信息footer: ## 指定站点的起始年, 若未定义, 则为当前年份 since: 2017 ## 配置年份与版权信息(copyright)之间的图标 icon: ### 可选值为FontAwesome字体图标中的名称 name: heartbeat ### 设置图标为动态的 animated: true ### 使用Hex代码改变图标颜色 color: "#808080" ## 版权信息 copyright: YuXiao ## 是否显示Hexo链接 powered: enable: false ### 是否显示版本号 version: false ## 是否显示主题链接 theme: enable: false ### 是否显示版本号 version: false # 启用canonical, 规范链接, 有利于SEO优化, 必须设置了hexo-site/_config.yml文件中的url才能设置为truecanonical: true# 更改站点的标题层次结构, 有利于SEO优化seo: true# 是否添加副标题到索引页面index_with_subtitle: true# 配置导航栏, 格式为: Key: LINK || ICO## Key: 导航项的名称, 会根据此菜单的名称去对应的翻译语言中去找## LINK: 导航项的链接, 即跳转的页面## ICO: 导航项的图标, 即FontAwesome字体图标的名称menu: home: / || home archives: /archives/ || archive tags: /tags/ || tags about: /about/ || user messages: /messages/ || comments# 导航栏的相关配置menu_settings: ## 是否启用导航栏的图标 icons: true badges: false# 设置主题样式, 目前Next支持4种主题样式scheme: Mist# 侧边栏中是否显示博文/标签的统计个数site_state: true# 配置社交链接, 格式为: Key: LINK || ICO## Key: 社交链接的名称## LINK: 社交链接的链接, 即跳转的页面## ICO: 社交链接的图标, 即FontAwesome字体图标的名称social: GitHub: https://github.com/YuXiaoCoder || github QQ: http://wpa.qq.com/msgrd?v=3&amp;uin=1026840746&amp;site=qq&amp;menu=yes || qq# 社交链接的图标配置social_icons: ## 是否启用社交链接的图标 enable: true ## 是否仅显示图标 icons_only: false transition: false ## 是否对链接加密, 如需加密按要求重新设置LINK的值 exturl: false# 设置友情链接links_icon: linklinks_title: 友情链接links_layout: blocklinks: Xiao's Blog: https://www.xiaocoder.com# 侧边栏头像avatar: ## 头像地址 url: /images/favicon.png ## 是否为圆形, 设置为false, 则为方形 rounded: true ## 设置头像的不透明度, 值为[0, 1] opacity: 0.7 ## 光标移至头像, 头像是否旋转 rotated: true# 配置侧边栏sidebar: ## 侧边栏的位置, 仅主题样式(Pisces | Gemini)可设置为right, 其他主题样式仅能是left position: left ## 侧边栏显示的时机, 仅主题样式(Muse | Mist)可设置, 在文章打开时自动显示 display: hide ## 侧边栏偏离导航栏的像素, 仅主题样式(Pisces | Gemini)可设置 offset: 12 ## 在侧边栏中回到导航栏, 仅主题样式(Pisces | Gemini)可设置 b2t: false ## 显示百分比标签 scrollpercent: true ## 在窄视图上显示侧边栏, 仅主题样式(Muse | Mist)可设置 onmobile: true# 自动将页面滚动至&lt;!-- more --&gt;标签之下scroll_to_more: true# 自动在cookie中保存文章滚动的位置save_scroll: true# 自动摘录文章中的描述excerpt_description: true# 文章的元数据post_meta: ## 标题 item_text: true ## 创建时间 created_at: true ## 更新时间 updated_at: enabled: true another_day: true categories: true# 统计文章字数## 需要插件: npm install --no-optional --save hexo-symbols-count-timesymbols_count_time: separated_meta: true item_text_post: true item_text_total: false awl: 4 wpm: 275# 配置代码块codeblock: ## 代码块的边框, 默认为1 border_radius: 1 ## 是否添加复制按钮 copy_button: enable: true ### 是否显示复制结果 show_result: true# 打赏信息## 打赏信息的文字reward_comment: 有你就有世界，感谢有你，昕！## 微信二维码wechatpay: /images/wechat-reward-image.png## 支付宝二维码alipay: /images/alipay-reward-image.png# 在文章上声明许可信息post_copyright: enable: true license: &lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="external nofollow" target="_blank"&gt;CC BY-NC-SA 4.0&lt;/a&gt;# 减少在较窄设备上填充/边距缩进mobile_layout_economy: true# 自定义代码块主题highlight_theme: night eighties# 在归档页面启用祝贺信息cheers_enabled: false# 汉化支持## 依赖项: https://github.com/theme-next/theme-next-hanhan: true# 启用自动推送百度, 有利于SEO优化baidu_push: true# 本地搜索## 依赖项: https://github.com/theme-next/hexo-generator-searchdblocal_search: enable: true trigger: auto top_n_per_article: 1 unescape: true# 页面书签支持## 依赖项: https://github.com/theme-next/theme-next-bookmarkbookmark: enable: true save: auto# 图片预览功能## 依赖项: https://github.com/theme-next/theme-next-fancybox3qfancybox: true# 资源懒加载, 在NexT(v6.0.0)中引入## 依赖项: https://github.com/theme-next/theme-next-jquery-lazyloadlazyload: true# 页面加载时, 顶部的进度条## 依赖项: https://github.com/theme-next/theme-next-pacepace: truepace_theme: pace-theme-bounce# Canvas动画## 依赖项: https://github.com/theme-next/theme-next-canvas-nestcanvas_nest: true# 自定义Script地址vendors: ## 书签支持, 使用CDN加速 bookmark: https://cdn.jsdelivr.net/gh/theme-next/theme-next-bookmark@latest/bookmark.min.js 其他配置项为网页标题添加崩溃欺骗搞怪特效 创建JS文件： xxx/themes/next/source/js/src/crash_cheat.js 1234567891011121314151617&lt;!--崩溃欺骗--&gt;var OriginTitle = document.title;var titleTime;document.addEventListener('visibilitychange', function () &#123; if (document.hidden) &#123; $('[rel="icon"]').attr('href', "/images/favicon.png"); document.title = '╭(°A°`)╮ 页面崩溃啦 ~'; clearTimeout(titleTime); &#125; else &#123; $('[rel="icon"]').attr('href', "/images/favicon.png"); document.title = '(ฅ&gt;ω&lt;*ฅ) 噫又好了~' + OriginTitle; titleTime = setTimeout(function () &#123; document.title = OriginTitle; &#125;, 2000); &#125;&#125;); 在布局layout文件中引用JS文件： xxx/themes/next/layout/_layout.swig 123&lt;body&gt; &lt;script type="text/javascript" src="/js/src/crash_cheat.js"&gt;&lt;/script&gt;&lt;/body&gt; 为博客添加点击爱心效果 创建JS文件： xxx/themes/next/source/js/src/click_love.js 1!function(e,t,a)&#123;function n()&#123;c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText="left:"+d[e].x+"px;top:"+d[e].y+"px;opacity:"+d[e].alpha+";transform:scale("+d[e].scale+","+d[e].scale+") rotate(45deg);background:"+d[e].color+";z-index:99999");requestAnimationFrame(r)&#125;function o()&#123;var t="function"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement("div");a.className="heart",d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement("style");a.type="text/css";try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName("head")[0].appendChild(a)&#125;function s()&#123;return"rgb("+~~(255*Math.random())+","+~~(255*Math.random())+","+~~(255*Math.random())+")"&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);q 在布局layout文件中引用JS文件： themes/next/layout/_layout.swig 123&lt;body&gt; &lt;script type="text/javascript" src="/js/src/click_love.js"&gt;&lt;/script&gt;&lt;/body&gt; 配置文章底部标签 文章底部默认是# 标签名, 此处修改为FontAwesome字体图标： xxx/themes/next/layout/_macro/post.swig 123456789&lt;footer class="post-footer"&gt; &#123;% if post.tags and post.tags.length and not is_index %&#125; &lt;div class="post-tags"&gt; &#123;% for tag in post.tags %&#125; &lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&lt;i class="fa fa-tag"&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; &#123;% endfor %&#125; &lt;/div&gt; &#123;% endif %&#125;&lt;/footer&gt; 添加自定义样式文件 在_data目录添加自定义样式文件： xxx/source/_data/styles.styl 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102// Custom styles.// 首页文章阴影样式.post &#123; margin-top: 50px; margin-bottom: 50px; padding: 25px; -webkit-box-shadow: 0 0 14px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 14px rgba(202, 203, 204, .5);&#125;// 侧栏按钮样式.sidebar-toggle &#123; background: #649ab6;&#125;.back-to-top &#123; background: #649ab6;&#125;// 首页阅读全文样式.post-button &#123; margin-top: 30px; text-align: center;&#125;.post-button .btn &#123; color: #fff; font-size: 15px; background: #686868; border-radius: 16px; line-height: 2; margin: 0 4px 8px 4px; padding: 0 20px;&#125;.post-button a&#123; border-bottom: 1px solid #666;&#125;.post-button a:hover &#123; color: #7784ba;&#125;// 文章目录样式.post-toc .nav .active&gt;a &#123; color: #4f7e96;&#125;.post-toc ol a:hover &#123; color: #7784ba;&#125;.sidebar-nav .sidebar-nav-active:hover &#123; color: #37596c;&#125;// 文章标题a &#123; border-bottom: none;&#125;.post-nav &#123; border-top: 1px solid #58B2DC;&#125;.posts-expand .post-tags &#123; text-align: center;&#125;.posts-expand .post-tags a &#123; box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24); font-family: 'Comic Sans MS', sans-serif; transition: 0.2s ease-out;&#125;.posts-expand .post-tags a:hover &#123; background-color: #58B2DC; color: #f5f5f5;&#125;.posts-expand .post-title:hover &#123; border-left: #7DB9DE 20px solid; padding-left: 15px; cursor: pointer; transition: border-width 0.3s linear 0.1s, color 0.2s linear 0.3s;&#125;// 文章中图片居中.post-body img &#123; margin: 0 auto;&#125;// 鼠标样式* &#123; cursor: url("http://olxczlg18.bkt.clouddn.com/Aero_arrow.cur"),auto!important;&#125;:active &#123; cursor: url("http://olxczlg18.bkt.clouddn.com/Aero_Working.cur"),auto!important&#125;// 页脚居中显示.footer-inner, .post-spread &#123; text-align: center;&#125; 配置NexT主题使用此样式文件： source/_data/next.yml 123custom_file_path: # Default path: source/css/_custom/custom.styl styles: source/_data/styles.styl 添加自定义变量文件 在_data目录添加自定义变量文件： xxx/source/_data/variables.styl 1234567891011121314151617181920212223// 修改成你期望的宽度$content-desktop = 800px// 当视窗超过 1600px 后的宽度$content-desktop-large = 1000px// 链接颜色$link-blue = #6495ED// 鼠标悬停后颜色$link-hover-blue = #0477AB// 用``围出的代码块字体颜色$code-foreground = #DD0055// 用``围出的代码块背景颜色$code-background = #EEE// Global link color.$link-color = $link-blue$link-hover-color = $link-hover-blue$link-decoration-color = $gray-lighter$link-decoration-hover-color = $link-hover-blue 配置NexT主题使用此样式文件： xxx/source/_data/next.yml 123custom_file_path: # Default path: source/css/_variables/custom.styl variables: source/_data/variables.styl 站点底部添加访客量和访问量 xxx/source/_data/next.yml 12345678busuanzi_count: enable: true total_visitors: true total_visitors_icon: user total_views: true total_views_icon: eye post_views: false post_views_icon: eye 为每篇文章添加阅读次数 使用LeanCloud来扩展此功能，此处需要注册并创建数据库，数据库名称为Counter。 注册LeanCloud，允许使用Github绑定登录，创建数据库： 登录账号 —&gt; 进入控制台 —&gt; 创建新应用 —&gt; 点击存储 —&gt; 新建 Class —&gt; Counter 获取应用的ID和Key： 登录账号 —&gt; 进入控制台 —&gt; 点击应用 —&gt; 点击设置 —&gt; 应用 Key —&gt; 记录 ID 和 Key 由于NexT主题已集成，直接修改配置文件即可： source/_data/next.yml 123456leancloud_visitors: enable: true app_id: &lt;&lt;app_id&gt;&gt; app_key: &lt;&lt;app_key&gt;&gt; security: false betterPerformance: true 在本地预览时，无法显示阅读次数，部署到服务器即可正常显示了。 为博客添加Valine极简评论 此处依旧是使用LeanCloud来扩展此功能，需要应用的ID和Key： 登录账号 —&gt; 进入控制台 —&gt; 点击应用 —&gt; 点击设置 —&gt; 应用 Key —&gt; 记录 ID 和 Key 由于NexT主题已集成Valine，直接修改配置文件即可： source/_data/next.yml 12345678910valine: enable: true appid: &lt;&lt;app_id&gt;&gt; appkey: &lt;&lt;app_key&gt;&gt; notify: false verify: false placeholder: 'ヾﾉ≧∀≦)o来啊，快活啊!' avatar: retro # gravatar style guest_info: nick,mail,link pageSize: 10]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python]]></title>
    <url>%2F2018%2F09%2F07%2Fpython%2F</url>
    <content type="text"><![CDATA[Python Application一、基本语法:import 与 from…import在 python中 用import 或者from...import 来导入相应的模块。 将整个模块(somemodule)导入，格式为：import somemodule 从某个模块中导入某个函数,格式为：from somemodule import somefunction 从某个模块中导入多个函数,格式为：from somemodule import firstfunc, secondfunc, thirdfunc 将某个模块中的全部函数导入，格式为： from somemodule import * 标识符（_name_ ） 第一个字符必须是字母表中的字母或下划线 _ 。 标识符的其他的部分由字母、数字和下划线组成。 标识符对大小写敏感 类型转换函数 函数 含义 float() 将 expr 转换为浮点值 int() 将 expr 转换为整数值 str() 返回 expr 的字符串表示形式 eval() 将字符串作为表达式求值 二、数据类型:Number、String、List、Tuple、Sets、Dictionary1.Number（数字）int、float、bool(布尔型)、complex（复数） 1234&gt;&gt;&gt; a, b, c, d = 20, 5.5, True, 4+3j # 在python中可以为多个变量赋值&gt;&gt;&gt; print(type(a), type(b), type(c), type(d))&lt;class 'int'&gt; &lt;class 'float'&gt; &lt;class 'bool'&gt; &lt;class 'complex'&gt; 2. String（字符串）：不变的str。 &#39;hello word&#39; &quot;python&quot; 一些字符串方法 函数 含义 s.capitalize() 只有第一个字符大写的 s 的副本 s.center(width) 在给定宽度的字段中居中的 s 的副本 s.count(sub) 计算 s 中 sub 的出现次数 s.find(sub) 找到 sub 出现在 s 中的第一个位置 s.join(list) 将列表连接到字符串中，使用 s 作为分隔符 s.ljust(width) 类似 center，但 s 是左对齐 s.lower() 所有字符小写的 s 的副本 s.lstrip() 删除前导空格的副本 s.replace(oldsub,newsub) 使用 newsub 替换 s 中的所有出现的 oldsub s.rfind(sub) 类似 find，但返回最右边的位置 s.rjust(width) 类似 center，但 s 是右对齐 s.rstrip() 删除尾部空格的 s 的副本 ==s.split()== 将 s 分割成子字符串列表 s.title() s 的每个单词的第一个字符大写的副本 s.upper() 所有字符都转换为大写的 s 的副本 字符串操作12345678910111213141516&gt;&gt;&gt; str = 'Runoob' # 注意str是关键字不能用作变量，这里只是为了演示。 &gt;&gt;&gt; print (str) # 输出字符串Runoob&gt;&gt;&gt; print (str[0:-1]) # 输出第一个到倒数第二个的所有字符Runoo&gt;&gt;&gt; print (str[0]) # 输出字符串第一个字符R&gt;&gt;&gt; print (str[2:5]) # 输出从第三个开始到第五个的字符noo&gt;&gt;&gt; print (str[2:]) # (:) 输出从第三个开始的后的所有字符noob&gt;&gt;&gt; print (str * 2) # (*) 输出字符串两次RunoobRunoob&gt;&gt;&gt; print (str + "TEST") # (+) 连接字符串RunoobTEST 操作符 含义 + 连接 * 重复 [ ] 索引 [ : ] 切片 len() 长度 for in 迭代遍历字符串 字符串格式化format函数 占位符 替换内容 %d 整数 %f 浮点数 %s 字符串 %x 十六进制整数 当字符串格式时，使用位置参数和关键词参数，须确保位置参数在关键词参数之前。格式化操作符辅助指令: 符号 功能 * 定义宽度或者小数点精度 - 用做左对齐 + 在正数前面显示加号( + ) 在正数前面显示空格 # 在八进制数前面显示零(‘0’)，在十六进制前面显示’0x’或者’0X’(取决于用的是’x’还是’X’) 0 显示的数字前面填充’0’而不是默认的空格 % ‘%%’输出一个单一的’%’ (var) 映射变量(字典参数) m.n. m 是显示的最小总宽度,n 是小数点后的位数(如果可用的话) 3.List（列表）[1,2,3,[&#39;me&#39;],&#39;world&#39;,3.2] 列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持==数字==，==字符串==甚至可以包含列表（所谓==嵌套==）。 和字符串一样，列表同样可以被==索引==和==截取==，列表被截取后返回一个包含所需元素的新列表。 可变的列表与Python字符串不一样的是，列表中的元素是可以改变的： 12345678&gt;&gt;&gt; a = [1, 2, 3, 4, 5, 6]&gt;&gt;&gt; a[0] = 9&gt;&gt;&gt; a[2:5] = [13, 14, 15] # 替换&gt;&gt;&gt; a[9, 2, 13, 14, 15, 6]&gt;&gt;&gt; a[2:5] = [] # 将对应的元素值设置为 [] &gt;&gt;&gt; a[9, 2, 6] 4、Tuple（元组） 带了==枷锁==的列表。]]></content>
      <tags>
        <tag>python notes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F09%2F06%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>说明</category>
      </categories>
      <tags>
        <tag>说明</tag>
      </tags>
  </entry>
</search>
